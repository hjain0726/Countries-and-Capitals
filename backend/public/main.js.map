{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/countries/countries.component.css","webpack:///./src/app/countries/countries.component.html","webpack:///./src/app/countries/countries.component.ts","webpack:///./src/app/create/create.component.css","webpack:///./src/app/create/create.component.html","webpack:///./src/app/create/create.component.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/firstpage/firstpage.component.css","webpack:///./src/app/firstpage/firstpage.component.html","webpack:///./src/app/firstpage/firstpage.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/shared/api.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { CreateComponent } from \"./create/create.component\";\r\nimport { CountriesComponent } from \"./countries/countries.component\";\r\nimport { FirstpageComponent } from \"./firstpage/firstpage.component\";\r\nimport { EditComponent } from \"./edit/edit.component\";\r\n\r\nconst appRoutes: Routes = [\r\n    { path: 'welcome', component: FirstpageComponent },\r\n    { path: 'listing', component: CountriesComponent },\r\n    { path: 'create', component: CreateComponent },\r\n    { path: 'edit', component: EditComponent },\r\n    { path: '**', redirectTo: '/welcome' }\r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(appRoutes)\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n}","module.exports = \"\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { CreateComponent } from './create/create.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ApiService } from './shared/api.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CountriesComponent } from './countries/countries.component';\nimport { FirstpageComponent } from './firstpage/firstpage.component';\nimport { EditComponent } from './edit/edit.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    CreateComponent,\n    CountriesComponent,\n    FirstpageComponent,\n    EditComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h2>Countries Listing</h2>\\n<table class=\\\"table\\\">\\n  <tr>\\n    <th>Name</th>\\n    <th>Capital</th>\\n    <th>Operations</th>\\n  </tr>\\n  <tr *ngFor=\\\"let country of countries\\\">\\n    <td>{{country.name}}</td>\\n    <td>{{country.capital}}</td>\\n    <td>\\n      <a class=\\\"btn btn-primary \\\" (click)=\\\"edit(country)\\\">\\n        <span class=\\\"glyphicon glyphicon-pencil\\\"></span>\\n      </a>&nbsp;\\n      <a class=\\\"btn btn-success \\\" (click)=\\\"delete(country._id)\\\">\\n        <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n      </a>&nbsp;\\n    </td>\\n  </tr>\\n</table>\\n<!--<div ng-if=\\\"users.length==0\\\">\\n       No record found !!\\n      </div>-->\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../shared/api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css']\n})\nexport class CountriesComponent implements OnInit {\n  countries;\n  constructor(private apiService: ApiService, private router: Router) { }\n\n  edit(country) {\n    this.apiService.setCountry(country);\n    this.router.navigate(['/edit']);\n  }\n\n  delete(id){\n    this.apiService.deletedata(id).subscribe((res)=>{\n      console.log(res);\n      this.initialize();\n    });\n  }\n\n  initialize(){\n    this.apiService.getData().subscribe((data) => {\n      this.countries = data;\n    });\n  }\n  ngOnInit() {\n    this.initialize();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1 style=\\\"text-align:center\\\">Create</h1>\\n<hr>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4 col-md-offset-4\\\">\\n    <form (ngSubmit)=\\\"create()\\\" #f=\\\"ngForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"text\\\" name=\\\"name\\\" ngModel placeholder=\\\"Name\\\" class=\\\"form-control\\\" required />\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"text\\\" name=\\\"capital\\\" ngModel placeholder=\\\"Capital\\\" class=\\\"form-control\\\" required/>\\n      </div>\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save</button>\\n    </form><br><br>\\n    <p>{{res}}</p>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ApiService } from '../shared/api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n  @ViewChild('f') createform: NgForm;\n  res: string;\n  constructor(private apiService: ApiService, private router: Router) { }\n\n  create() {\n    this.apiService.saveData(this.createform.value).subscribe((res) => {\n      this.res = res['msg'];\n      this.router.navigate(['/listing']);\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1 style=\\\"text-align:center\\\">Edit</h1>\\r\\n<hr>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4 col-md-offset-4\\\">\\r\\n        <form (ngSubmit)=\\\"edit()\\\" #f=\\\"ngForm\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"country.name\\\" placeholder=\\\"Name\\\" class=\\\"form-control\\\" required/>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" name=\\\"capital\\\" [(ngModel)]=\\\"country.capital\\\" placeholder=\\\"Capital\\\" class=\\\"form-control\\\" required />\\r\\n            </div>\\r\\n            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Edit</button>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ApiService } from '../shared/api.service';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  country;\n  @ViewChild('f') editForm: NgForm;\n  constructor(private apiService: ApiService, private router: Router) { }\n\n  edit() {\n    this.apiService.editData(this.apiService.country._id, this.editForm.value).subscribe((res) => {\n      console.log(res);\n      this.router.navigate(['/listing']);\n    });\n  }\n  ngOnInit() {\n    this.country = this.apiService.country;\n  }\n}","module.exports = \"\"","module.exports = \"<h1>Welcome to Countries and Capitals</h1>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-firstpage',\n  templateUrl: './firstpage.component.html',\n  styleUrls: ['./firstpage.component.css']\n})\nexport class FirstpageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <!-- Brand and toggle get grouped for better mobile display -->\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\"\\n        aria-expanded=\\\"false\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/welcome\\\">Countries and Capitals</a>\\n    </div>\\n\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li>\\n          <a routerLink=\\\"/listing\\\">\\n            <span class=\\\"glyphicon glyphicon-th-list\\\"></span> Listing</a>\\n        </li>\\n        <li>\\n          <a routerLink=\\\"/create\\\">\\n            <span class=\\\"glyphicon glyphicon-plus\\\"></span> Create</a>\\n        </li>\\n      </ul>\\n    </div>\\n    <!-- /.navbar-collapse -->\\n  </div>\\n  <!-- /.container-fluid -->\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Country } from \"../country-list.model\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n    country;\r\n    path = \"http://localhost:3000/api\";\r\n    constructor(private http: HttpClient) { }\r\n\r\n    saveData(obj: Country) {\r\n        return this.http.post(this.path + \"/create\", obj);\r\n    }\r\n\r\n    getData() {\r\n        return this.http.get(this.path + \"/givedata\");\r\n    }\r\n\r\n    editData(id, obj) {\r\n        return this.http.put(this.path + \"/editdata/\" + id, obj);\r\n    }\r\n    deletedata(id) {\r\n        return this.http.delete(this.path + \"/deletedata/\" + id);\r\n    }\r\n\r\n    setCountry(country) {\r\n        this.country = country;\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}